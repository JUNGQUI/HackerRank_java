package com.jk.algorithm.hackerrank.problem.queensArrack2;

/*
체스판과 queen 의 위치, 장애물의 개수 장애물의 위치가 주어진다. 퀸이 움직일 수 있는 칸의 개수를 구하라.

int n = n by n 의 체스판
int r_q = queen 의 y칸
int c_q = queen 의 x칸
int [][] obstacles = 장애물, 해당 위치에 있다면 퀸의 이동 경로 중 해당 위치부터 이동 할 수 없다.

각 방향별 장애물 없이 갈 수 있는 값을 구하고, 각 장애물 별 최종 장애물을 가름한 뒤 최종 장애물로 인한 이동 수를 뺀 전체 이동 수를 구한다.

구하는 법 - 퀸 이동
상 : n - r_q
하 : r_q - 1
좌 : c_q - 1
우 : n - c_q
우상 : 우, 상 중 작은 값
우하 : 우, 하 중 작은 값
좌하 : 좌, 하 중 작은 값
좌상 : 좌, 상 중 작은 값

구하는 법 - 장애물로 인한 이동 불가 수
_o 를 r_q, c_q 와 같이 표기
상 : n - r_o + 1
하 : r_o
좌 : c_o
우 : n - c_o + 1
우상 : 우, 상 중 작은 값 과 현재 우상 중 큰 값
우하 : 우, 하 중 작은 값 과 현재 우하 중 큰 값
좌하 : 좌, 하 중 작은 값 과 현재 좌하 중 큰 값
좌상 : 좌, 상 중 작은 값 과 현재 좌상 중 큰 값

 */